{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reduser.js","redux/store.js","components/Section/Section.js","components/Form/Form.js","redux/contacts/contacts-selectors.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","App.js","index.js","components/Form/Form.module.css","components/Contact/Contact.module.css"],"names":["module","exports","actions","onSubmitHandler","createAction","deleteContact","onChangeFilter","items","createReducer","state","payload","checkingExistingContacts","filter","id","_","value","isNameHere","find","contact","name","toLowerCase","isNumberHere","number","alert","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReduser","devTools","process","allStore","persistor","persistStore","Section","title","children","className","styles","section","defaultProps","Form","useState","setName","setNumber","dispatch","useDispatch","handleChange","e","currentTarget","s","form","onSubmit","preventDefault","shortid","generate","label","input","type","pattern","required","placeholder","onChange","button","getFilter","getVisibleContacts","allItems","getItems","normalizedFilter","item","includes","Filter","useSelector","Contact","data","href","onClick","ContactList","map","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ee26442d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\",\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1Ny0J\",\"contact\":\"ContactList_contact__3ZIyH\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst onSubmitHandler = createAction('contacts/submit');\n\nconst deleteContact = createAction('contacts/delete');\n\nconst onChangeFilter = createAction('contacts/changeFilter');\n\nconst actions = { onSubmitHandler, deleteContact, onChangeFilter };\n\nexport default actions;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.onSubmitHandler]: (state, { payload }) =>\n    checkingExistingContacts(state, payload),\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.onChangeFilter]: (_, { payload }) => payload,\n});\n\nconst checkingExistingContacts = (state, value) => {\n  const isNameHere = state.find(\n    contact => contact.name.toLowerCase() === value.name.toLowerCase(),\n  );\n\n  const isNumberHere = state.find(\n    contact => contact.number.toLowerCase() === value.number.toLowerCase(),\n  );\n\n  return isNameHere || isNumberHere\n    ? alert(\n        `${isNameHere ? value.name : ''} ${\n          isNumberHere ? value.number : ''\n        } is already in contacts`,\n      )\n    : [...state, value];\n};\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReduser from './contacts/contacts-reduser';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReduser),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nconst allStore = { store, persistor };\n\nexport default allStore;\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import { useState } from 'react';\nimport shortid from 'shortid';\nimport { useDispatch } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport s from './Form.module.css';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'name' && setName(value);\n    name === 'number' && setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(actions.onSubmitHandler({ id: shortid.generate(), name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"The name can only consist of letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","export const getFilter = state => state.contacts.filter;\nexport const getItems = state => state.contacts.items;\nexport const getVisibleContacts = state => {\n  const allItems = getItems(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return allItems.filter(\n    item =>\n      item.name.toLowerCase().includes(normalizedFilter) ||\n      item.number.includes(normalizedFilter),\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <p className={s.filter}>\n      <label className={s.label}>\n        Find contacts\n        <input\n          className={s.input}\n          type=\"text\"\n          placeholder=\"Enter name or number\"\n          value={value}\n          onChange={e =>\n            dispatch(actions.onChangeFilter(e.currentTarget.value))\n          }\n        ></input>\n      </label>\n    </p>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport actions from '../../redux/contacts/contacts-actions';\nimport s from './Contact.module.css';\n\nconst Contact = ({ data }) => {\n  const { name, number, id } = data;\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.contact}>\n      <span className={s.name}>{name}:</span>\n      <a className={s.number} href={`tel:${number}`}>\n        {number}\n      </a>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => dispatch(actions.deleteContact(id))}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Contact;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Contact from '../Contact';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  return (\n    <div className={s.contacts}>\n      <ul>\n        {contacts.map(contact => (\n          <li key={contact.id} className={s.contact}>\n            <Contact data={contact} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import Section from './components/Section';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nconst App = () => (\n  <>\n    <Section title=\"Phonebook\">\n      <Form />\n    </Section>\n    <Section title=\"Contacts\">\n      <Filter />\n      <ContactList />\n    </Section>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport allStore from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={allStore.store}>\n      <PersistGate loading={null} persistor={allStore.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"button\":\"Form_button__243jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__1m2re\",\"name\":\"Contact_name__2ZcKm\",\"number\":\"Contact_number__2MvnN\",\"button\":\"Contact_button__1wUL0\"};"],"sourceRoot":""}